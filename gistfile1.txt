//PROGECT..MATRIX
#include <iostream>
#include <string>
#include<cstdlib>
#include<sstream>
#include<cmath>
#include<math.h>
using namespace std ;
#define size 100 

void print(float soln[size][size],int r, int c){
	cout<<"[";
	for(int i=0;i<r+1;i++){
		for(int j=0;j<c+1;j++){
		cout<<soln[i][j];
		if(j!=c) cout<<" " ;
		}
		if(i!=r)
	cout<<";";
	}
	cout<<"]";

}
void trans(float mat1[size],int r ,int c){float arr1[size][size] ; int i,j,k;
		float soln[size][size];
		for(int i=0;i<size;i++){
			for(int j=0;j<size;j++){
			arr1[i][j]=0; soln[i][j]=0;
			}
		}
		int n1=0;
		for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				arr1[i][j]=mat1[n1];
			n1++;
			}
		}
		for(i=0;i<c+1;i++){
			for(j=0;j<r+1;j++){
			soln[i][j]=arr1[j][i];
			
			}
		}
			print(soln,c,r);


}
void add(float mat1[size],float mat2[size],int r,int c ){
	float soln[size][size];int n=0;
	cout<<"[";
	for(int i=0;i<r+1;i++){
		for(int j=0;j<c+1;j++){
		soln[i][j]=mat1[n]+mat2[n];
		cout<<soln[i][j];
		if(j!=c) cout<<" " ;
		n++;
		}
		if(i!=r)
	cout<<";";
	}
	cout<<"]";

}
void subtract (float mat1[size],float mat2[size],int r,int c ){
	float soln[size][size];int n=0;
	cout<<"[";
	for(int i=0;i<r+1;i++){
		for(int j=0;j<c+1;j++){
		soln[i][j]=mat1[n]-mat2[n];
		cout<<soln[i][j];
		if(j!=c) cout<<" " ;
		n++;
		}
		if(i!=r)
	cout<<";";
	}
	cout<<"]";

}
void power(float mat1[size],int r,int c, int x){
	float arr1[size][size] ; int i,j,k;
	float arr[size][size];
		float soln[size][size];
		for(int i=0;i<size;i++){
			for(int j=0;j<size;j++){
			arr1[i][j]=0; soln[i][j]=0;
			arr[i][j]=0;
			}
		}
		int n1=0;
		for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				arr1[i][j]=mat1[n1];
								arr[i][j]=mat1[n1];

			n1++;
			}
		}

	
		/////////////////////
		if(x%2==0){
	for(int b=0;b<x/2;b++){
		for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				for(k=0;k<c+1;k++){
				soln[i][j]+=arr1[i][k]*arr1[k][j];
				
			
				}
			
			}
				
		}
		
		
		
			for(int n=0;n<size;n++){
			for(int d=0;d<size;d++){
			arr1[n][d]=soln[n][d];
			soln[n][d]=0;
			}
		}
	
	}
		}
		else{	for(int b=1;b<x-1;b++){
		for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				for(k=0;k<c+1;k++){
				soln[i][j]+=arr1[i][k]*arr1[k][j];
				
			
				}
			
			}
				
		}
		
		
		
			for(int n=0;n<size;n++){
			for(int d=0;d<size;d++){
			arr1[n][d]=soln[n][d];
			soln[n][d]=0;
			}
		}
	
	}
		for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				for(k=0;k<c+1;k++){
				soln[i][j]+=arr1[i][k]*arr[k][j];
				
			
				}
			
			}
				
		}
		  	for(int n=0;n<size;n++){
			for(int d=0;d<size;d++){
			arr1[n][d]=soln[n][d];
			soln[n][d]=0;
			}
		}
		    
		    
		}
	
		/////////////////
		print(arr1,r,c);

}
double detr(float mat1[size],int r,int c){
	int i,j;
	float soln=0;
 float coof[size];
	float arr[size][size];
	for(i=0;i<size;i++){
	for(j=0;j<size;j++){
		arr[i][j]=0;
	}}
	int n1=0;
	for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				arr[i][j]=mat1[n1];
			n1++;
			}
		}

	if(r==1){
 return ((arr[0][0]*arr[1][1])-(arr[1][0]*arr[0][1]));//not genral
	}
double x=0;
	////////////////////

	for(i=0;i<r;i++){
	    	x=-arr[i+1][0]/arr[0][0];
		for(j=0;j<r+1;j++){
	
		arr[i+1][j]+=x*arr[0][j];
		
		}

	}		


	for(i=1;i<r+1;i++){
	    x=-arr[i+1][1]/arr[1][1];
	    for(j=0;j<r+1;j++){
	        arr[i+1][j]+=x*arr[1][j];
	        
	    }
	}
	
	for(i=2;i<r+1;i++){
	    x=-arr[i+1][2]/arr[2][2];
	    for(j=2;j<r+1;j++){
	        arr[i+1][j]+=x*arr[2][j];
	        
	    }
	}
double value=1;
for(i=0;i<r+1;i++)
value*=arr[i][i];
return value;
	
}


void invers(float mat1[size],int r,int c,float value[size][size]){
	int i,j;
	float arr[size][size];
	for(i=0;i<size;i++){
	for(j=0;j<size;j++){
		arr[i][j]=0;
		value[i][j]=0;
	}}
	int n1=0;
	for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				arr[i][j]=mat1[n1];
			n1++;
			}
		}
	for(i=0;i<r+1;i++)
		value[i][i]=1;
double x=0;
x=arr[0][0];
for(i=0;i<r+1;i++){
arr[0][i]/=x;
value[0][i]/=x;}


	for(i=0;i<r+1;i++){
	    	x=-arr[i+1][0]/arr[0][0];
		for(j=0;j<r+1;j++){
	
		 arr[i+1][j]+=x*arr[0][j];
		value[i+1][j]+=x*value[0][j];
		}

	}	


x=arr[1][1];
for(i=0;i<r+1;i++){
arr[1][i]/=x;
value[1][i]/=x;}

	for(i=1;i<r;i++){
	    x=-arr[i+1][1]/arr[1][1];
	    for(j=0;j<r+1;j++){
	     arr[i+1][j]+=x*arr[1][j];
	       value[i+1][j]+=x*value[1][j];
	    }
	}


x=arr[2][2];
for(i=0;i<r+1;i++){
arr[2][i]/=x;
value[2][i]/=x;}
	for(i=2;i<r;i++){
	    x=-arr[i+1][2]/arr[2][2];
	    for(j=0;j<r+1;j++){
	        arr[i+1][j]+=x*arr[2][j];
	        	        value[i+1][j]+=x*value[2][j];

	    }
	}


x=arr[3][3];
for(i=0;i<r+1;i++){
arr[3][i]/=x;
value[3][i]/=x;}

 for(i=0;i<r;i++){
     x=-arr[i][r];
     for(j=0;j<r+1;j++){
         arr[i][j]+=x*arr[r][j];
         value[i][j]+=x*value[r][j];
     }
 } 


     for(i=0;i<r-1;i++){
     x=-arr[i][r-1];
     for(j=0;j<r+1;j++){
         arr[i][j]+=x*arr[r-1][j];
           value[i][j]+=x*value[r-1][j];
     }
 }
 for(i=0;i<r-2;i++){
     x=-arr[i][r-2];
     for(j=0;j<r+1;j++){
         arr[i][j]+=x*arr[r-2][j];
           value[i][j]+=x*value[r-2][j];
     }
 }
 for(i=0;i<r-3;i++){
     x=-arr[i][r-3];
     for(j=0;j<r+1;j++){
         arr[i][j]+=x*arr[r-3][j];
           value[i][j]+=x*value[r-3][j];
     }
}
}

void multi (float mat1[size],float mat2[size],int r,int c,int r2,int c2 ){
	float arr1[size][size] ; int i,j,k;
		float arr2[size][size] ;
		float soln[size][size];
		for(int i=0;i<size;i++){
			for(int j=0;j<size;j++){
			arr1[i][j]=0;arr2[i][j]=0; soln[i][j]=0;
			}
		}
		int n1=0,n2=0;
		for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				arr1[i][j]=mat1[n1];
			n1++;
			}
		}

		for(i=0;i<r2+1;i++){
			for(j=0;j<c2+1;j++){
				arr2[i][j]=mat2[n2];
			n2++;
			}
		}
		/////////////////////
		for(i=0;i<r+1;i++){
			for(j=0;j<c2+1;j++){
				for(k=0;k<c+1;k++){
				soln[i][j]+=arr1[i][k]*arr2[k][j];
				}
			}
		}
		/////////////////
		print(soln,r,c2);

}


void dvide(float mat2[size],float value[size][size],int r,int c,int r2,int c2){
	float arr1[size][size] ; int i,j,k;
		float soln[size][size];
		for(int i=0;i<size;i++){
			for(int j=0;j<size;j++){
			arr1[i][j]=0; soln[i][j]=0;
			}
		}
		int n1=0,n2=0;
		for(i=0;i<r+1;i++){
			for(j=0;j<c+1;j++){
				arr1[i][j]=mat2[n1];
			n1++;
			}
		}
			for(i=0;i<r+1;i++){
			for(j=0;j<c2+1;j++){
				for(k=0;k<c+1;k++){
				soln[i][j]+=arr1[i][k]*value[k][j];
				}
			}
		}

			print(soln,r,c2);
}





int main ()
{string str1,str2,str10,s1,s2;
int i,j,k;
int n=0,n2=0;
float v,v2;
string arr[size];
string arr2[size];
int count=0,count2=0,l;
int op;
getline(cin,str1);
getline(cin,str10);
if(str10[0]=='^'){
cin>>op;
}
else if(str10[0]=='T'||str10[0]=='D'||str10[0]=='I'){}
else
getline(cin,str2);
//////////////////////////////////////////row&colomn
int r=0,c=0,r2=0,c2=0;
for(i=0;i<str1.length();i++){
if(str1[i]==';') r++;
}
for(i=0;i<str1.length();i++){
if(str1[i]==';') break;
if(str1[i]==' ') c++;
}

for(i=0;i<str2.length();i++){
if(str2[i]==';') r2++;
}
for(i=0;i<str2.length();i++){
if(str2[i]==';') break;
if(str2[i]==' ') c2++;
}


/////////////////////////////////////////////////////////////////////substring 
for(i=0;i<str1.length();i++){
	if(str1[i]=='['){
		for(k=i+1;k<str1.length();k++){
			if(str1[k]==' '){s1=str1.substr(n+1,(k-n-1));
			arr[count]=s1;  break;}
		
		}
	
	}
	
	if(str1[i]==' '||(str1[i]==';')){ n=i;count++;
	for(j=i+1;j<str1.length();j++){
		if((str1[j]==' ')||(str1[j]==';')||(str1[j]==']')){
			s1=str1.substr(n+1,(j-n-1));
			arr[count]=s1;  break;}
}
	}
n=0; 
}




for(i=0;i<str2.length();i++){
	if(str2[i]=='['){
		for(k=i+1;k<str2.length();k++){
			if(str2[k]==' '){s2=str2.substr(n2+1,(k-n2-1));
			arr2[count2]=s2;  break;}
		
		}
	
	}
	
	if(str2[i]==' '||(str2[i]==';')){ n2=i;count2++;
	for(j=i+1;j<str2.length();j++){
		if((str2[j]==' ')||(str2[j]==';')||(str2[j]==']')){
			s2=str2.substr(n2+1,(j-n2-1));
			arr2[count2]=s2;  break;}
}
	}
n2=0; 
}
/////////////////////////////////////////////////////////////////////////////substring 
string a,b;
float mat1[size];
float mat2[size];
for(i=0;i<size;i++)
{mat1[i]=0;mat2[i]=0;}
for(i=0;i<count+1;i++){
a=arr[i];
v = atof(a.c_str());
mat1[i]=v;
}

for(i=0;i<count2+1;i++){
b=arr2[i];
v2 = atof(b.c_str());
mat2[i]=v2;
}
int con =0;
for(i=0;i<str1.length();i++){
    if (str1[i]==' ')con++;
    
    
}
float value[size][size];
/////////////////////////////////////////////////////////////////////////////////
if(str10[0]=='+'){if(count!=count2){cout<<"ERROR";return 0;}
   else
	add(mat1,mat2,r,c);}
else if(str10[0]=='-'){if(count!=count2){cout<<"ERROR";return 0;}
    else
	subtract(mat1,mat2,r,c);
}
else if(str10[0]=='*'){if(c!=r2){cout<<"ERROR";return 0;}

else 
	multi(mat1,mat2,r,c,r2,c2);
}
else if(str10[0]=='^')if(r!=c){cout<<"ERROR";return 0;}
else
{power(mat1,r,c,op);}
else if(str10[0]=='T')if(con%c!=0){cout<<"ERROR";return 0;}
else
{trans(mat1,r,c);}
else if(str10[0]=='D')if(r!=c) {cout<<"ERROR"; return 0;}
else
	cout<<detr(mat1,r,c);
else if(str10[0]=='I')if(r!=c) {cout<<"ERROR"; return 0;}
else
	{invers(mat1,r,c,value);
print(value,r,c);}
else if(str10[0]=='/')if(c!=r2){cout<<"ERROR";return 0;}
else{invers(mat2,r,c,value);
dvide(mat1,value,r,c,r2,c2);
}}